<template>
    <div class="container-fluid" style="font-size: 20px;">
      <div class="row d-flex justify-content-right align-items-start" style="min-height: 110vh;">
        <div class="col-md-10 col-lg-6 col-sm-10 g-mt-10">
          <div class="g-pa-40 g-mb-30 vacant_positions" role="alert">
            <div class="row">
              <div class="col-lg-12 col-sm-12 g-pa-2">
                <div class="form-group g-mb-20">
                  <v-form>
                    <v-container>
                      <v-row>
                        <div class="scene perspective-on">
                          <div id="lottery" class="center">
                            <div class="lottery-machine">
                              <div class="lottery-machine-canvas">
                                <div class="circle-animation">
                                  <transition-group name="ball-animation">
                                    <div class="lottery-ball" v-for="(ball, index) in balls" :key="index">{{ ball }}</div>
                                  </transition-group>
                                </div>
                              </div>
                              <div class="lottery-lever" @click="pullLever" :class="{ 'down': leverPulled }"></div>
                              <div class="lottery-right-door"></div>
                              <div class="lottery-left-door"></div>
                              <div class="lottery-lift"></div>
                              <transition name="ball-animation">
                                <div class="lottery-ball" v-show="playing">1</div>
                              </transition>
                              <div class="lottery-hover-area" @click="handleClick"></div>
                            </div>
                            <div id="ball-place"></div>
                          </div>
                        </div>
                        <button id="play" @click="handleClick">Play</button>
                      </v-row>
                    </v-container>
                  </v-form>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </template>
  
<script>
export default {
  data() {
    return {
      balls: new Array(16).fill(null).map((_, i) => i + 1),
      leverPulled: false,
      playing: false,
    };
  },
  methods: {
    pullLever() {
      this.leverPulled = true;
      this.$nextTick(() => {
        this.playing = true;
        setTimeout(() => {
          this.playing = false;
          // Handle winner selection here
        }, 1000);
      });
    },
    handleClick() {
      // Perform actions when the button is clicked
    },
  },
};
</script>

  
<style scoped>

#stage {
margin: 0 auto;
width: 600px;
padding: 0 0 40px;
}

.perspective-on {
-webkit-perspective: 1000px;
    -moz-perspective: 1000px;
        perspective: 1000px;    /* Setting the perspective of the contents of the stage but not the stage itself*/
}
.perspective-off {
-webkit-perspective: 0;
    -moz-perspective: 0;
        perspective: 0;
}

#rotate {
margin: 0 auto 0;
width: 450px;
height: 220px;
padding-top: 200px;
/* Ensure that we're in 3D space */
transform-style: preserve-3d;
}

.ring {
    margin: 0 auto;
    height: 80px;
    width: 90px;
    float: left;
    transform-style: preserve-3d;
}
.slot {
position: absolute;
width: 90px;
height: 80px;
box-sizing: border-box;
opacity: 0.9;
color: rgba(0,0,0,0.9);
background: #fff;
border: solid 2px #000;
-webkit-backface-visibility: hidden;
    -moz-backface-visibility: hidden;
        backface-visibility: hidden;
}

.backface-on {
-webkit-backface-visibility: visible;
    -moz-backface-visibility: visible;
        backface-visibility: visible;
}

.slot p {
font-size: 36px;
font-weight: bold;
line-height: 80px;
margin: 0;
text-align: center;
}

.go {
display: block;
margin: 0 auto 20px;
padding:10px 30px;
font-size: 20px;
cursor: pointer;
}
full_name {
cursor: pointer;
display: inline-block;
width: 45%;
text-align: center;
}
.tilted {
transform: rotateY(45deg);
}
/*=====*/
.spin-0     { transform: rotateX(-3719deg); }
.spin-1     { transform: rotateX(-3749deg); }
.spin-2     { transform: rotateX(-3779deg); }
.spin-3     { transform: rotateX(-3809deg); }
.spin-4     { transform: rotateX(-3839deg); }
.spin-5     { transform: rotateX(-3869deg); }
.spin-6     { transform: rotateX(-3899deg); }
.spin-7     { transform: rotateX(-3929deg); }
.spin-8     { transform: rotateX(-3959deg); }
.spin-9     { transform: rotateX(-3989deg); }
.spin-10    { transform: rotateX(-4019deg); }
.spin-11    { transform: rotateX(-4049deg); }
/*=====*/
@keyframes back-spin {
    /*0%    { transform: rotateX(0deg); }*/
    100%  { transform: rotateX(30deg); }
}
@keyframes tiltin {
    0%    { transform: rotateY(0deg);}
    50%   { transform: rotateY(0deg);}
    100%  { transform: rotateY(45deg);}
}
@keyframes tiltout {
    0%    { transform: rotateY(45deg);}
    100%  { transform: rotateY(0deg);}
}

@keyframes spin-0 {
    0%    { transform: rotateX(30deg); }
    100%  { transform: rotateX(-3719deg); }
}
@keyframes spin-1 {
    0%    { transform: rotateX(30deg); }
    100%  { transform: rotateX(-3749deg); }
}
@keyframes spin-2 {
    0%    { transform: rotateX(30deg); }
    100%  { transform: rotateX(-3779deg); }
}
@keyframes spin-3 {
    0%    { transform: rotateX(30deg); }
    100%  { transform: rotateX(-3809deg); }
}
@keyframes spin-4 {
    0%    { transform: rotateX(30deg); }
    100%  { transform: rotateX(-3839deg); }
}
@keyframes spin-5 {
    0%    { transform: rotateX(30deg); }
    100%  { transform: rotateX(-3869deg); }
}
@keyframes spin-6 {
    0%    { transform: rotateX(30deg); }
    100%  { transform: rotateX(-3899deg); }
}
@keyframes spin-7 {
    0%    { transform: rotateX(30deg); }
    100%  { transform: rotateX(-3929deg); }
}
@keyframes spin-8 {
    0%    { transform: rotateX(30deg); }
    100%  { transform: rotateX(-3959deg); }
}
@keyframes spin-9 {
    0%    { transform: rotateX(30deg); }
    100%  { transform: rotateX(-3989deg); }
}
@keyframes spin-10 {
    0%    { transform: rotateX(30deg); }
    100%  { transform: rotateX(-4019deg); }
}
@keyframes spin-11 {
    0%    { transform: rotateX(30deg); }
    100%  { transform: rotateX(-4049deg); }
}
text{
    font-family:Helvetica, Arial, sans-serif;
    font-size:11px;
    pointer-events:none;
}
#chart{
    width:500px;
    height:500px;
    top:0;
    left:0;
}
#question{
    position: absolute;
    width:400px;
    height:500px;
    top:0;
    left:520px;
}
#question h1{
    font-size: 50px;
    font-weight: bold;
    font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
    position: absolute;
    padding: 0;
    margin: 0;
    top:50%;
    -webkit-transform:translate(0,-50%);
            transform:translate(0,-50%);
}
button {
    font-family: "Open Sans";
    color: #fff;
    text-align: center;
    position: absolute;
    top: 480px;
    left: 220px;
    font-size: 18px;
    border: none;
    width: 158px;
    border-radius: 3px;
    padding: 10px;
    background-color: #13BAFF;
    box-sizing: border-box;
    cursor: pointer;
}
.scene {
    font-family: "Open Sans";
}
#lottery {
    position: relative;
}

/* where ball placed after draw */
#ball-place {
    position: absolute;
    top: 0px;
    left: -40%;
}

@media (min-width: 1480px) {
    #ball-place {
        position: absolute;
        top: 0px;
        left: -40%;
    }
}

.lottery-machine {
    position: inherit;
    border-radius: 50%;
    width: 200px;
    height: 215px;
}
.lottery-machine-canvas {
    position: inherit;
    top: 0px;
    width: 700px;
    height: 700px;
    padding: 7px;
    border-radius: inherit;
    box-sizing: border-box;
    transition: opacity 0.7s;
}
.lottery-machine::after {
    content: '';
    position: absolute;
    top: 0px;
    width: 700px;
    height: 700px;
    background-color: rgba(85, 177, 201, .3);
    border: 7px solid #00bcff;
    border-radius: inherit;
    box-sizing: border-box;
    transition: opacity 0.7s;
}
.lottery-machine.disabled .lottery-machine-canvas {
    opacity: 0;
    pointer-events: none;
}
.lottery-machine.disabled::after {
    opacity: 0;
    pointer-events: none;
}

/*
.lottery-machine .lottery-base {
position: absolute;
background-image: url('https://svgur.com/i/DH4.svg');
width: 165px;
height: 75px;
left: 0;
top: 141px;
z-index: 2;
} */

.lottery-machine .lottery-lever {
position: absolute;
background-image: url('https://svgur.com/i/DGD.svg');
width: 52px;
height: 23px;
left: 410px;
top: 720px;
transition: transform 0.5s;
transform-origin: left center;
}

.lottery-machine .lottery-lever.hover {
    transform: rotate(-10deg);
}
.lottery-machine .lottery-lever.down {
    transform: rotate(15deg);
}

/* .lottery-machine .lottery-tube {
position: absolute;
background-image: url('https://svgur.com/i/DHH.svg');
width: 110px;
height: 182px;
left: 61px;
top: 3px;
z-index: 1;
} */
.lottery-machine .lottery-right-door, .lottery-machine .lottery-left-door {
    position: absolute;
    background-image: url('https://svgur.com/i/DJ5.svg');
    width: 32px;
    height: 29px;
    left: 77px;
    margin-left: 290px;
    margin-top: 300px;
    top: 420px;
    z-index: 4;
    transition: left 0.75s;
}
.lottery-machine .lottery-right-door.animation, .lottery-machine .lottery-left-door.animation {
    left: 101px;
}
.lottery-machine .lottery-left-door {
    background-image: url('https://svgur.com/i/DHF.svg');
    left: 46px;
}
.lottery-machine .lottery-left-door.animation {
    left: 20px;
}
.lottery-machine .lottery-lift {
    position: absolute;
    background-color: #abe9f4;
    width: 14px;
    height: 0;
    left: 360px;
    top: 744px;
    box-sizing: border-box;
    border: 1px solid #ddeff3;
    border-radius: 2px;
    transition: top 1s, height 1s;
}
.lottery-machine .lottery-lift.animation {
    top: 0px;
    height: 500px;
}
.lottery-machine .lottery-ball {
    width: 18px;
    height: 18px;
    line-height: 1.375;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 12px;
    border-radius: 50%;
    position: absolute;
    left: 358px;
    top: 733px;
    transition: top 1s, transform 0.75s ease-in;
}
.lottery-machine .lottery-ball.invisible {
    opacity: 0;
}
.lottery-machine .lottery-ball.animation-up {
    top: -10px;
}
.lottery-machine .lottery-ball.animation-roll {
    transform-origin: 19px 375px;
    transform: rotate(180deg);
}
.lottery-machine .lottery-ball.blink:after {
    content: '';
    background-color: #fff;
    position: absolute;
    left: 10px;
    top: 4px;
    width: 4px;
    height: 4px;
    transform-origin: 0 0;
    transform: rotate(0);
}
.lottery-machine .lottery-ball.no-transition {
    transition: none;
}
.lottery-machine .lottery-hover-area {
    position: absolute;
    top: 0;
    left: 0;
    height: 214px;
    width: 100%;
    z-index: 5;
}
.lottery-ball.clone {
    position: absolute;
    width: 18px;
    height: 18px;
    font-size: 12px;
    line-height: 1.375;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
}
.lottery-ball.clone.invisible {
    opacity: 0;
}
.lottery-ball.clone.no-transition {
    transition: none;
}
#play{
    margin-top:330px;
    margin-left: 70px;
}

</style>